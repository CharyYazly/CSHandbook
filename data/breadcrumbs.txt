{"Getting_Started":"\/Getting Started","Fundamentals":"\/Fundamentals","Recursion":"\/Recursion","Sorting":"\/Sorting","Data_Structures":"\/Data Structures","Graph_Theory":"\/Graph Theory","Searches":"\/Searches","Dynamic_Programming":"\/Dynamic Programming","Strings":"\/Strings","Format":"\/Getting Started\/Format","Basics":"\/Fundamentals\/Basics","Runtime_and_Memory":"\/Fundamentals\/Runtime and Memory","Boolean_Algebra":"\/Fundamentals\/Boolean Algebra","Logic":"\/Fundamentals\/Logic","Advanced_Recursion":"\/Recursion\/Advanced Recursion","Bubble_Sort":"\/Sorting\/Bubble Sort","Selection_Sort":"\/Sorting\/Selection Sort","Insertion_Sort":"\/Sorting\/Insertion Sort","Heap_Sort":"\/Sorting\/Heap Sort","Merge_Sort":"\/Sorting\/Merge Sort","Quick_Sort":"\/Sorting\/Quick Sort","Bozo_Sort":"\/Sorting\/Bozo Sort","Permutation_Sort":"\/Sorting\/Permutation Sort","Miracle_Sort":"\/Sorting\/Miracle Sort","Arrays":"\/Data Structures\/Arrays","Stack":"\/Data Structures\/Stack","Vector":"\/Data Structures\/Vector","Queue":"\/Data Structures\/Queue","Linked_List":"\/Data Structures\/Linked List","Trees":"\/Data Structures\/Trees","Binary_Tree":"\/Data Structures\/Binary Tree","Sets":"\/Data Structures\/Sets","Hash_Set":"\/Data Structures\/Hash Set","Tree_Set":"\/Data Structures\/Tree Set","Maps":"\/Data Structures\/Maps","Hash_Map":"\/Data Structures\/Hash Map","Tree_Map":"\/Data Structures\/Tree Map","Priority_Queue":"\/Data Structures\/Priority Queue","Heap":"\/Data Structures\/Heap","Advanced_Data_Structures":"\/Data Structures\/Advanced Data Structures","Binary_Search_Tree":"\/Data Structures\/Binary Search Tree","Advanced_Graph_Theory":"\/Graph Theory\/Advanced Graph Theory","Adjacency_Matrix":"\/Graph Theory\/Adjacency Matrix","Adjacency_List":"\/Graph Theory\/Adjacency List","Prim's":"\/Graph Theory\/Prim's","Kruskal":"\/Graph Theory\/Kruskal","Floyd_Warshall":"\/Graph Theory\/Floyd Warshall","Bellman_Ford":"\/Graph Theory\/Bellman Ford","Dijkstra's":"\/Graph Theory\/Dijkstra's","Cycle_detection":"\/Graph Theory\/Cycle detection","Topological_Sorting":"\/Graph Theory\/Topological Sorting","Connected_Components":"\/Graph Theory\/Connected Components","Strongly_Connected_Components":"\/Graph Theory\/Strongly Connected Components","Linked_Lists":"\/Graph Theory\/Linked Lists","Tree":"\/Graph Theory\/Tree","Minimum_Spanning_Tree":"\/Graph Theory\/Minimum Spanning Tree","Depth_First_Search":"\/Graph Theory\/Depth First Search","Breadth_First_Search":"\/Graph Theory\/Breadth First Search","Binary_Search":"\/Searches\/Binary Search","Ternary_Search":"\/Searches\/Ternary Search","Flood_Fill":"\/Searches\/Flood Fill","Backtracking":"\/Searches\/Backtracking","Advanced_Dynamic_Programming":"\/Dynamic Programming\/Advanced Dynamic Programming","Coin_Problem":"\/Dynamic Programming\/Coin Problem","Knapsack_Problem":"\/Dynamic Programming\/Knapsack Problem","Pattern_Matching":"\/Strings\/Pattern Matching","Levenshtein_Distance":"\/Strings\/Levenshtein Distance","Hamming_Distance":"\/Strings\/Hamming Distance","Data_Types":"\/Fundamentals\/Basics\/Data Types","Boolean":"\/Fundamentals\/Basics\/Boolean","Integer":"\/Fundamentals\/Basics\/Integer","Character":"\/Fundamentals\/Basics\/Character","Float":"\/Fundamentals\/Basics\/Float","Operations":"\/Fundamentals\/Basics\/Operations","Loops":"\/Fundamentals\/Basics\/Loops","Intermediate_Recursion":"\/Recursion\/Advanced Recursion\/Intermediate Recursion","Towers_of_Hanoi":"\/Recursion\/Advanced Recursion\/Towers of Hanoi","Exercises":"\/Data Structures\/Vector\/Exercises","Array":"\/Data Structures\/Vector\/Array","Map":"\/Data Structures\/Hash Map\/Map","hash_set":"\/Data Structures\/Hash Map\/hash set","Hash_sets":"\/Data Structures\/Hash Map\/Hash sets","Line_Sweeping":"\/Data Structures\/Priority Queue\/Line Sweeping","B-tree":"\/Data Structures\/Advanced Data Structures\/B-tree","Binary_Indexed_Tree":"\/Data Structures\/Advanced Data Structures\/Binary Indexed Tree","AVL_Tree":"\/Data Structures\/Advanced Data Structures\/AVL Tree","Red_Black_Tree":"\/Data Structures\/Advanced Data Structures\/Red Black Tree","Segment_Tree":"\/Data Structures\/Advanced Data Structures\/Segment Tree","Interval_Tree":"\/Data Structures\/Advanced Data Structures\/Interval Tree","Splay_Tree":"\/Data Structures\/Advanced Data Structures\/Splay Tree","Fibonacci_Heap":"\/Data Structures\/Advanced Data Structures\/Fibonacci Heap","Binomial_Heap":"\/Data Structures\/Advanced Data Structures\/Binomial Heap","Trie":"\/Data Structures\/Advanced Data Structures\/Trie","Set":"\/Data Structures\/Binary Search Tree\/Set","Red_Black_Trees":"\/Data Structures\/Binary Search Tree\/Red Black Trees","Hamiltonian_Path":"\/Graph Theory\/Advanced Graph Theory\/Hamiltonian Path","Eulerian_Path":"\/Graph Theory\/Advanced Graph Theory\/Eulerian Path","Hamiltonian_Cycle":"\/Graph Theory\/Advanced Graph Theory\/Hamiltonian Cycle","Hamiltonian_cycle":"\/Graph Theory\/Advanced Graph Theory\/Hamiltonian cycle","Eulerian_Cycle":"\/Graph Theory\/Advanced Graph Theory\/Eulerian Cycle","Travelling_Salesman_Problem":"\/Graph Theory\/Advanced Graph Theory\/Travelling Salesman Problem","Travelling_salesman":"\/Graph Theory\/Advanced Graph Theory\/Travelling salesman","Shortest_Path":"\/Graph Theory\/Floyd Warshall\/Shortest Path","Greedy_Algorithm":"\/Graph Theory\/Dijkstra's\/Greedy Algorithm","Permutation":"\/Searches\/Backtracking\/Permutation","N_Queen_Problem":"\/Searches\/Backtracking\/N Queen Problem","Longest_Common_Subsequence":"\/Dynamic Programming\/Advanced Dynamic Programming\/Longest Common Subsequence","Zero-one_Knapsack_Problem":"\/Dynamic Programming\/Advanced Dynamic Programming\/Zero-one Knapsack Problem","Knuth_Morris_Pratt":"\/Strings\/Pattern Matching\/Knuth Morris Pratt","Rabin_Karp":"\/Strings\/Pattern Matching\/Rabin Karp","Finite_State_Automata":"\/Strings\/Pattern Matching\/Finite State Automata","Boyer_Moore":"\/Strings\/Pattern Matching\/Boyer Moore","Interval_Scheduling":"\/Graph Theory\/Dijkstra's\/Greedy Algorithm\/Interval Scheduling"}